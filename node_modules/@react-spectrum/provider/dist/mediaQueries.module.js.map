{"mappings":";;AAAA;;;;;;;;;;CAUC;AAKM,SAAS,0CAAe,KAAY,EAAE,kBAA+B;IAC1E,IAAI,cAAc,CAAA,GAAA,oBAAY,EAAE;IAChC,IAAI,eAAe,CAAA,GAAA,oBAAY,EAAE;IAEjC,oCAAoC;IAEpC,IAAI,MAAM,IAAI,IAAI,aAChB,OAAO;IAGT,IAAI,MAAM,KAAK,IAAI,cACjB,OAAO;IAGT,IAAI,MAAM,IAAI,IAAI,uBAAuB,QACvC,OAAO;IAGT,IAAI,MAAM,KAAK,IAAI,uBAAuB,SACxC,OAAO;IAGT,IAAI,CAAC,MAAM,IAAI,EACb,OAAO;IAGT,IAAI,CAAC,MAAM,KAAK,EACd,OAAO;IAGT,OAAO;AACT;AAEO,SAAS,0CAAS,KAAY;IACnC,IAAI,cAAc,CAAA,GAAA,oBAAY,EAAE;IAChC,IAAI,eAAe,MAAM,MAAM,EAC7B,OAAO;IAGT,IAAI,MAAM,KAAK,EACb,OAAO;IAGT,OAAO;AACT","sources":["packages/@react-spectrum/provider/src/mediaQueries.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ColorScheme, Scale, Theme} from '@react-types/provider';\nimport {useMediaQuery} from '@react-spectrum/utils';\n\nexport function useColorScheme(theme: Theme, defaultColorScheme: ColorScheme): ColorScheme {\n  let matchesDark = useMediaQuery('(prefers-color-scheme: dark)');\n  let matchesLight = useMediaQuery('(prefers-color-scheme: light)');\n\n  // importance OS > default > omitted\n\n  if (theme.dark && matchesDark) {\n    return 'dark';\n  }\n\n  if (theme.light && matchesLight) {\n    return 'light';\n  }\n\n  if (theme.dark && defaultColorScheme === 'dark') {\n    return 'dark';\n  }\n\n  if (theme.light && defaultColorScheme === 'light') {\n    return 'light';\n  }\n\n  if (!theme.dark) {\n    return 'light';\n  }\n\n  if (!theme.light) {\n    return 'dark';\n  }\n\n  return 'light';\n}\n\nexport function useScale(theme: Theme): Scale {\n  let matchesFine = useMediaQuery('(any-pointer: fine)');\n  if (matchesFine && theme.medium) {\n    return 'medium';\n  }\n\n  if (theme.large) {\n    return 'large';\n  }\n\n  return 'medium';\n}\n"],"names":[],"version":3,"file":"mediaQueries.module.js.map"}
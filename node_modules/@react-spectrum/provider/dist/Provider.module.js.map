{"mappings":"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","sources":["packages/@react-spectrum/provider/src/Provider.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  BreakpointProvider,\n  shouldKeepSpectrumClassNames,\n  useDOMRef,\n  useMatchedBreakpoints,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport clsx from 'clsx';\nimport {Context} from './context';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps, RouterProvider} from '@react-aria/utils';\nimport {I18nProvider, useLocale} from '@react-aria/i18n';\nimport {ModalProvider, useModalProvider} from '@react-aria/overlays';\nimport {ProviderContext, ProviderProps} from '@react-types/provider';\nimport React, {useContext, useEffect, useRef} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/page/vars.css';\nimport typographyStyles from '@adobe/spectrum-css-temp/components/typography/index.css';\nimport {useColorScheme, useScale} from './mediaQueries';\n// @ts-ignore\nimport {version} from '../package.json';\n\nconst DEFAULT_BREAKPOINTS = {S: 640, M: 768, L: 1024, XL: 1280, XXL: 1536};\n\nfunction Provider(props: ProviderProps, ref: DOMRef<HTMLDivElement>) {\n  let prevContext = useProvider();\n  let prevColorScheme = prevContext && prevContext.colorScheme;\n  let prevBreakpoints = prevContext && prevContext.breakpoints;\n  let {\n    theme = prevContext && prevContext.theme,\n    defaultColorScheme\n  } = props;\n  if (!theme) {\n    throw new Error('theme not found, the parent provider must have a theme provided');\n  }\n  // Hooks must always be called.\n  let autoColorScheme = useColorScheme(theme, defaultColorScheme);\n  let autoScale = useScale(theme);\n  let {locale: prevLocale} = useLocale();\n  // if the new theme doesn't support the prevColorScheme, we must resort to the auto\n  let usePrevColorScheme = !!theme[prevColorScheme];\n\n  // importance of color scheme props > parent > auto:(OS > default > omitted)\n  let {\n    colorScheme = usePrevColorScheme ? prevColorScheme : autoColorScheme,\n    scale = prevContext ? prevContext.scale : autoScale,\n    locale = prevContext ? prevLocale : null,\n    breakpoints = prevContext ? prevBreakpoints : DEFAULT_BREAKPOINTS,\n    children,\n    isQuiet,\n    isEmphasized,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n    validationState,\n    router,\n    ...otherProps\n  } = props;\n\n  // select only the props with values so undefined props don't overwrite prevContext values\n  let currentProps = {\n    version,\n    theme,\n    breakpoints,\n    colorScheme,\n    scale,\n    isQuiet,\n    isEmphasized,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n    validationState\n  };\n\n  let matchedBreakpoints = useMatchedBreakpoints(breakpoints);\n  let filteredProps = {};\n  Object.entries(currentProps).forEach(([key, value]) => value !== undefined && (filteredProps[key] = value));\n\n  // Merge options with parent provider\n  let context = Object.assign({}, prevContext, filteredProps);\n\n  // Only wrap in a DOM node if the theme, colorScheme, or scale changed\n  let contents = children;\n  let domProps = filterDOMProps(otherProps);\n  let {styleProps} = useStyleProps(otherProps, undefined, {matchedBreakpoints});\n  if (!prevContext || props.locale || theme !== prevContext.theme || colorScheme !== prevContext.colorScheme || scale !== prevContext.scale || Object.keys(domProps).length > 0 || otherProps.UNSAFE_className || Object.keys(styleProps.style).length > 0) {\n    contents = (\n      <ProviderWrapper {...props} UNSAFE_style={{isolation: !prevContext ? 'isolate' : undefined, ...styleProps.style}} ref={ref}>\n        {contents}\n      </ProviderWrapper>\n    );\n  }\n\n  if (router) {\n    contents = <RouterProvider {...router}>{contents}</RouterProvider>;\n  }\n\n  return (\n    <Context.Provider value={context}>\n      <I18nProvider locale={locale}>\n        <BreakpointProvider matchedBreakpoints={matchedBreakpoints}>\n          <ModalProvider>\n            {contents}\n          </ModalProvider>\n        </BreakpointProvider>\n      </I18nProvider>\n    </Context.Provider>\n  );\n}\n\n/**\n * Provider is the container for all React Spectrum applications.\n * It defines the theme, locale, and other application level settings,\n * and can also be used to provide common properties to a group of components.\n */\nlet _Provider = React.forwardRef(Provider);\nexport {_Provider as Provider};\n\nconst ProviderWrapper = React.forwardRef(function ProviderWrapper(props: ProviderProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {locale, direction} = useLocale();\n  let {theme, colorScheme, scale} = useProvider();\n  let {modalProviderProps} = useModalProvider();\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  let themeKey = Object.keys(theme[colorScheme])[0];\n  let scaleKey = Object.keys(theme[scale])[0];\n\n  let className = clsx(\n    styleProps.className,\n    styles['spectrum'],\n    typographyStyles['spectrum'],\n    Object.values(theme[colorScheme]),\n    Object.values(theme[scale]),\n    theme.global ? Object.values(theme.global) : null,\n    {\n      'react-spectrum-provider': shouldKeepSpectrumClassNames,\n      spectrum: shouldKeepSpectrumClassNames,\n      [themeKey]: shouldKeepSpectrumClassNames,\n      [scaleKey]: shouldKeepSpectrumClassNames\n    }\n  );\n\n  let style = {\n    ...styleProps.style,\n    // This ensures that browser native UI like scrollbars are rendered in the right color scheme.\n    // See https://web.dev/color-scheme/.\n    colorScheme: props.colorScheme ?? colorScheme ?? Object.keys(theme).filter(k => k === 'light' || k === 'dark').join(' ')\n  };\n\n  let hasWarned = useRef(false);\n  useEffect(() => {\n    if (direction && domRef.current) {\n      let closestDir = domRef.current.parentElement.closest('[dir]');\n      let dir = closestDir && closestDir.getAttribute('dir');\n      if (dir && dir !== direction && !hasWarned.current) {\n        console.warn(`Language directions cannot be nested. ${direction} inside ${dir}.`);\n        hasWarned.current = true;\n      }\n    }\n  }, [direction, domRef, hasWarned]);\n\n\n  return (\n    <div\n      {...filterDOMProps(otherProps)}\n      {...styleProps}\n      {...modalProviderProps}\n      className={className}\n      style={style}\n      lang={locale}\n      dir={direction}\n      ref={domRef}>\n      {children}\n    </div>\n  );\n});\n\n/**\n * Returns the various settings and styles applied by the nearest parent Provider.\n * Properties explicitly set by the nearest parent Provider override those provided by preceeding Providers.\n */\nexport function useProvider(): ProviderContext {\n  return useContext(Context);\n}\n\nexport function useProviderProps<T>(props: T) : T {\n  let context = useProvider();\n  if (!context) {\n    return props;\n  }\n  return Object.assign({}, {\n    isQuiet: context.isQuiet,\n    isEmphasized: context.isEmphasized,\n    isDisabled: context.isDisabled,\n    isRequired: context.isRequired,\n    isReadOnly: context.isReadOnly,\n    validationState: context.validationState\n  }, props);\n}\n"],"names":[],"version":3,"file":"Provider.module.js.map"}